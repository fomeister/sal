//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.03.16 at 02:56:25 PM EST 
//


package jcu.sal.config.plugins.xml;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the jcu.sal.config.plugins.xml package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: jcu.sal.config.plugins.xml
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link EndPointPluginsType }
     * 
     */
    public EndPointPluginsType createEndPointPluginsType() {
        return new EndPointPluginsType();
    }

    /**
     * Create an instance of {@link SalPlugins }
     * 
     */
    public SalPlugins createSalPlugins() {
        return new SalPlugins();
    }

    /**
     * Create an instance of {@link HelperNameClassType }
     * 
     */
    public HelperNameClassType createHelperNameClassType() {
        return new HelperNameClassType();
    }

    /**
     * Create an instance of {@link ConfigHelpersType }
     * 
     */
    public ConfigHelpersType createConfigHelpersType() {
        return new ConfigHelpersType();
    }

    /**
     * Create an instance of {@link ProtocolType }
     * 
     */
    public ProtocolType createProtocolType() {
        return new ProtocolType();
    }

    /**
     * Create an instance of {@link ProtocolPluginsType }
     * 
     */
    public ProtocolPluginsType createProtocolPluginsType() {
        return new ProtocolPluginsType();
    }

    /**
     * Create an instance of {@link NameClassType }
     * 
     */
    public NameClassType createNameClassType() {
        return new NameClassType();
    }

}
